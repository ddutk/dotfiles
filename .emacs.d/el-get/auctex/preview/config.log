This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by preview-latex configure 11.84, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  $ ./configure --prefix=/usr/local --with-lispdir=/Users/cpence/.emacs.d/el-get/auctex --without-texmf-dir --with-emacs=/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs --cache-file=/dev/null --srcdir=.

## --------- ##
## Platform. ##
## --------- ##

hostname = bertrand.local
uname -m = i386
uname -r = 10.7.0
uname -s = Darwin
uname -v = Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386
Kernel configured for up to 2 processors.
2 processors are physically available.
2 processors are logically available.
Processor type: i486 (Intel 80486)
Processors active: 0 1
Primary memory available: 4.00 gigabytes
Default processor set: 89 tasks, 432 threads, 2 processors
Load average: 1.48, Mach factor: 0.74
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/texbin
PATH: /usr/local/bin
PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1683: checking whether make sets $(MAKE)
configure:1704: result: yes
configure:1757: checking for a BSD-compatible install
configure:1813: result: /usr/bin/install -c
configure:1880: checking for /usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs
configure:1910: result: /usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs
configure:1928: checking if /usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs is XEmacs
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (if (featurep (quote xemacs)) "yes" "no"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517"))
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> no
configure:1950: result: no
configure:1954: checking for Emacs prefix
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((cmd(pop command-line-args-left))(x (condition-case nil (let*
    ((prefix (directory-file-name (file-name-directory (executable-find cmd))))
     (parent (directory-file-name (file-name-directory prefix))))
    (if (string= (file-name-nondirectory prefix) "bin")
        (setq prefix parent)
      (if (string= (file-name-nondirectory parent) "bin")
         (setq prefix (directory-file-name (file-name-directory parent)))))
    prefix) (error NONE)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517")) /usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> /usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS
configure:1973: result: "/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS"
configure:2005: checking if Emacs is recent enough
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (cond ((< emacs-major-version 21) "no")
			 ((> emacs-major-version 21) "yes")
			 ((< emacs-minor-version 01) "no")
			 (t "yes")))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517"))
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> yes
configure:2019: result: yes
configure:2061: checking if build directory is valid
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((x (if (or (member (directory-file-name default-directory) load-path)	      (member (file-name-as-directory default-directory) load-path))	 "no" "yes"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517"))
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> yes
configure:2079: result: yes
configure:2171: checking where lisp files go
configure:2246: result: /Users/cpence/.emacs.d/el-get/auctex
configure:2250: checking what file to use for preview startup
configure:2277: result: /Users/cpence/.emacs.d/el-get/auctex/preview-latex.el
configure:2291: checking where the package lisp files go
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\`\.\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\`\.\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517")) /Users/cpence/.emacs.d/el-get/auctex/auctex /Users/cpence/.emacs.d/el-get/auctex /Users/cpence/.emacs.d/el-get/auctex/preview-latex.el
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2372: result: /Users/cpence/.emacs.d/el-get/auctex/auctex
configure:2375: checking where the data files go
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\`\.\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\`\.\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517")) /Users/cpence/.emacs.d/el-get/auctex/auctex /Users/cpence/.emacs.d/el-get/auctex /Users/cpence/.emacs.d/el-get/auctex/preview-latex.el
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2456: result: /Users/cpence/.emacs.d/el-get/auctex/auctex
configure:2463: checking for the location of AUCTeX's tex-site.el
configure:2517: result: ..
configure:2528: checking for gs
configure:2544: found /usr/local/bin/gs
configure:2555: result: gs
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((dir(pop command-line-args-left))(x (if (member dir (list "NONE" (if (eq system-type 'windows-nt) "GSWIN32C.EXE" "gs"))) "" `(defvar preview-gs-command ,dir)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517")) gs
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> 
configure:2583: checking for latex
configure:2601: found /usr/texbin/latex
configure:2614: result: /usr/texbin/latex
configure:2633: checking for pdflatex
configure:2651: found /usr/texbin/pdflatex
configure:2663: result: /usr/texbin/pdflatex
configure:2682: checking for tex
configure:2713: result: /usr/texbin/tex
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\`\.\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\`\.\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517")) /Users/cpence/.emacs.d/el-get/auctex/auctex/latex /Users/cpence/.emacs.d/el-get/auctex /Users/cpence/.emacs.d/el-get/auctex/preview-latex.el
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> (expand-file-name "auctex/latex" (file-name-directory load-file-name))
configure:3288: checking for glaring installation conflicts
/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((packagelispdir(pop command-line-args-left)) (previewstartfile(pop command-line-args-left))(x 
  (concat
    (and (setq tmp (locate-library "preview.elc"))
         (not (string= (file-truename tmp)
	               (file-truename (expand-file-name "preview.elc"
                                      packagelispdir))))
         (format "Conflicting previous installation in `%s' found!
"
                 (file-name-directory tmp)))
    (and (setq tmp (locate-library "preview-latex.el"))
         (not (string= (file-truename tmp)
                       (file-truename previewstartfile)))
         (format "Conflicting previous startup file `%s' found!
" tmp))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-83517")) /Users/cpence/.emacs.d/el-get/auctex/auctex /Users/cpence/.emacs.d/el-get/auctex/preview-latex.el
Wrote /Users/cpence/.emacs.d/el-get/auctex/preview/conftest-83517
=> 
configure:3350: result: probably none
configure:3564: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by preview-latex config.status 11.84, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on bertrand.local

config.status:595: creating Makefile
config.status:595: creating auto.el
config.status:595: creating latex/Makefile

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_env_GS_set=
ac_cv_env_GS_value=
ac_cv_env_TEXHASH_set=
ac_cv_env_TEXHASH_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_path_EMACS=/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs
ac_cv_path_LATEX=/usr/texbin/latex
ac_cv_path_PDFLATEX=/usr/texbin/pdflatex
ac_cv_path_TEX=/usr/texbin/tex
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_GS=gs
ac_cv_prog_make_make_set=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

DEFS='-DPACKAGE_NAME=\"preview-latex\" -DPACKAGE_TARNAME=\"preview-latex\" -DPACKAGE_VERSION=\"11.84\" -DPACKAGE_STRING=\"preview-latex\ 11.84\" -DPACKAGE_BUGREPORT=\"bug-auctex@gnu.org\"'
ECHO_C='ECHO_N=''
ECHO_T=''
EMACS='/usr/local/Cellar/emacs/HEAD/Emacs.app/Contents/MacOS/Emacs'
EMACS_FLAVOR='emacs'
GS='gs'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LATEX='/usr/texbin/latex'
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
PACKAGE_BUGREPORT='bug-auctex@gnu.org'
PACKAGE_NAME='preview-latex'
PACKAGE_STRING='preview-latex 11.84'
PACKAGE_TARNAME='preview-latex'
PACKAGE_VERSION='11.84'
PATH_SEPARATOR=':'
PDFLATEX='/usr/texbin/pdflatex'
PLAT_LISP='prv-emacs.el'
SET_MAKE=''
SHELL='/bin/sh'
TEX='/usr/texbin/tex'
TEXHASH=':'
TEXMFGEN='preview.sty prauctex.def prauctex.cfg prshowbox.def prshowlabels.def prtracingall.def prtightpage.def prlyx.def prcounters.def prfootnotes.def'
XEMACS='no'
auctexdir='..'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host_alias=''
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
lispGS=''
lispdir='/Users/cpence/.emacs.d/el-get/auctex'
lisppackagedatadir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagelispdir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagetexstyles='(defvar preview-TeX-style-dir (expand-file-name "auctex/latex" (file-name-directory load-file-name)))'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
packagedatadir='/Users/cpence/.emacs.d/el-get/auctex/auctex'
packagedir='no'
packagelispdir='/Users/cpence/.emacs.d/el-get/auctex/auctex'
packagetexstyles='/Users/cpence/.emacs.d/el-get/auctex/auctex/latex'
pdfdir='${docdir}'
prefix='/usr/local'
previewdocdir='/Users/cpence/.emacs.d/el-get/auctex/auctex/doc'
previewstartfile='/Users/cpence/.emacs.d/el-get/auctex/preview-latex.el'
previewtexmfdir='/Users/cpence/.emacs.d/el-get/auctex/auctex/latex'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''
texmfdir='no'

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_NAME "preview-latex"
#define PACKAGE_TARNAME "preview-latex"
#define PACKAGE_VERSION "11.84"
#define PACKAGE_STRING "preview-latex 11.84"
#define PACKAGE_BUGREPORT "bug-auctex@gnu.org"

configure: exit 0
